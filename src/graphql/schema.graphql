type Activity {
	id: ID!
	name: String!
}

"""
An RFC-3339 compliant DateTime Scalar
"""
scalar DateTime

"""
ISO_8601 compliant Duration Scalar
"""
scalar Duration

type Link {
	id: ID!
	link: String!
	mainLink: Boolean
}

input LinkInput {
	link: String!
	mainLink: Boolean
}

type Mutation {
	"""
	track mutation
	"""
	createTrack(track: TrackInput!): Track!
	deleteTrack(id: ID!): Track
	updateTrack(id: ID!, track: TrackInput!): Track!

	"""
	link mutation
	"""
	createLink(track: TrackInput!): Track!
	deleteLink(id: ID!): Track
	createActivity(name: String!): Activity!
	deleteActivity(id: ID!): Activity
	updateActivity(id: ID!, name: String!): Activity
}

type PageInfo {
	startCursor: ID
	endCursor: ID
	hasPreviousPage: Boolean!
	hasNextPage: Boolean!
}

type Query {
	getTrack(id: ID!): Track
	getTracks(limit: Int!, after: ID, sort: [TrackSort!], searchText: String): TrackConnection
	getLink(id: ID!): Link
	getActivities: [Activity!]!
	getActivity(id: ID!): Activity
}

type Track {
	id: ID!
	title: String!
	description: String
	length: Float
	time: Duration
	altitudeDifference: Int
	links: [Link!]!
	uploadTime: DateTime!
	activity: Activity
}

type TrackConnection {
	edges: [TrackEdge!]!
	pageInfo: PageInfo!
}

type TrackEdge {
	cursor: ID!
	node: Track!
}

input TrackInput {
	title: String!
	description: String
	length: Float
	time: Duration
	altitudeDifference: Int
	links: [LinkInput!]
	activity: ID
}

enum TrackSort {
	ID_ASC
	ID_DESC
	UPLOAD_TIME_ASC
	UPLOAD_TIME_DESC
	TITLE_ASC
	TITLE_DESC
	TIME_ASC
	TIME_DESC
	LENGTH_ASC
	LENGTH_DESC
	ALT_DIFF_ASC
	ALT_DIFF_DESC
	ACTIVITY_NAME_ASC
	ACTIVITY_NAME_DESC
}
